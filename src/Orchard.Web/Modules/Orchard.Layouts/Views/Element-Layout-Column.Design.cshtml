@using Orchard.DisplayManagement.Shapes
@using Orchard.Layouts.Elements
@using Orchard.Layouts.Helpers
@{
    var element = (Column)Model.Element;
    var row = element.Container as Row;
    var columnSpan = ((string)Model.ColumnSpan).ToInt32() ?? Grid.GridSize;
    var columnOffset = ((string)Model.ColumnOffset).ToInt32() ?? 0;
    var columnOffsetCss = columnOffset > 0 ? "offset-" + columnOffset : default(string);
    var occupiedSpan = row != null ? row.Columns.Sum(x => (x.ColumnSpan ?? 0) + (x.ColumnOffset ?? 0)) : 1;
    var isTemplated = element.IsTemplated;
    var tagBuilder = (OrchardTagBuilder)TagBuilderExtensions.AddCommonElementAttributes(new OrchardTagBuilder("div"), Model);
    
    tagBuilder.AddCssClass("cell");
    tagBuilder.AddCssClass("span-" + columnSpan);
    tagBuilder.AddCssClass(columnOffsetCss);
    tagBuilder.AddCssClass("x-element");
    tagBuilder.AddCssClass("x-container");
    tagBuilder.AddCssClass("x-column");

    if (isTemplated) {
        tagBuilder.AddCssClass("templated");
    }

    tagBuilder.Attributes["data-element"] = Model.ElementJson;
}
@tagBuilder.StartElement
    <div @if (!isTemplated) { <text> class="resizable" </text> }>
        <div @if (!isTemplated) { <text> class="draggable" </text> }>
            @if (!isTemplated) {
                <div class="toolbar column-toolbar dynamic-toolbar group">
                    <div class="pull-left">
                        @if (element.Descriptor.EnableEditorDialog) {
                            <a class="edit icon-cog" href="#" title="@T("Edit column properties")"></a>
                        }
                        @if (columnOffset > 0) {
                            <a class="decrease-offset icon-arrow-left" href="#" title="@T("Decrease offset")"></a>
                        }
                        @if (occupiedSpan < Grid.GridSize) {
                            <a class="increase-offset icon-arrow-right" href="#" title="@T("Increase offset")"></a>
                        }
                        @if (columnSpan > 1) {
                            <a class="split-column icon-bolt" href="#" title="@T("Split this column")"></a>
                        }
                        @if (row.Columns.Count() > 1) {
                            <a class="remove icon-trash" href="#" title="@T("Remove this column")"></a>
                        }
                    </div>
                    <div class="pull-right">
                        <span class="name">@T("Column")</span>
                    </div>
                </div>
            }
            <div class="element container x-holder drop-target column-container">
                @DisplayChildren(Model)
            </div>
            <a href="#" class="add" title="@T("Add Element")"></a>
        </div>
    </div>
@tagBuilder.EndElement