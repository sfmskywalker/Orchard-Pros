@model OrchardPros.Tickets.ViewModels.TicketViewModel
@{
    Style.Include("select2.css");
    Style.Include("select2-bootstrap.css");
    Script.Include("~/Modules/Orchard.MediaLibrary/Scripts/knockout-2.3.0.js");
    Script.Require("jQuery");
    Script.Require("OrchardPros.Tickets.CreateTicket");
    Script.Include("select2.js", "select2.min.js");
    Script.Include("select2-initialization.js");
}
<div class="form-group">
    @Html.LabelFor(m => m.Title, T("Title"))
    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = T("Give your ticket a title") })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Type, T("Type"))
    @Html.EditorFor(m => m.Type)
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Description, T("Description"))
    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = T("Describe your issue in details"), rows = 5 })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Categories, T("Categories"))
    @Html.EditorFor(m => m.Categories, new { Terms = Model.CategoryTerms })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Tags, T("Tags"))
    @Html.HiddenFor(m => m.Tags, new { data_tags = Url.Action("Search", "Tag", new { Area = "OrchardPros.Tickets" }), @class = "form-control", placeholder = T("Tag your ticket, separated by comma [,]") })
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Bounty, T("Bounty"))
    @Html.TextBoxFor(m => m.Bounty, new { @class = "form-control", placeholder = T("Award the best solution with an optional bounty (in US Dollars)") })
    @Html.ValidationMessageFor(m => m.Bounty)
</div>
<div class="form-group">
    <label for="exp">Experience points</label>
    <p>@T("This ticket will worth <strong>{0} EXP</strong>.", Model.ExperiencePoints)</p>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.DeadlineUtc, T("Deadline"))
    @Html.TextBoxFor(m => m.DeadlineUtc, new { @class = "form-control" })
</div>
<div class="form-group">
    <label>@T("Attachments")</label>
    <div class="well" id="file-upload" data-upload-url="@Url.Action("Upload", "Ticket", new { Area = "OrchardPros.Tickets" })" data-anti-forgery-token="@Html.AntiForgeryTokenValueOrchard()">
        <input type="file" name="files[]" multiple="multiple">
        <ul data-bind="foreach: transfers" class="list-unstyled">
            <li>
                <input type="hidden" name="uploadedFileNames" data-bind="value: uploadedFileName"/>
                <input type="hidden" name="originalFileNames" data-bind="value: fileName" />
                <span data-bind="css: status, text: label"></span>
                <button type="button" data-bind="click: $parent.remove">@T("X")</button>
            </li>
        </ul>
        <p class="h3">@T("Drag &amp; Drop attachment(s) or")</p>
        <button id="browse-files" class="btn btn-default btn-upload" type="button">@T("Browse Files")</button>
    </div>
</div>