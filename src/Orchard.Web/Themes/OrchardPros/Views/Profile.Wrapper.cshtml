@{
    Layout.Jumbotron.Add(New.Profile_Jumbotron(User: Model.User));
    Layout.AsideFirst.Add(New.Profile_Aside(User: Model.User));

    var currentAction = (string)ViewContext.RouteData.Values["action"];
}
<section>
    <div class="sorter">
        <ul class="nav nav-tabs">
            <li @if (String.Equals(currentAction, "Index", StringComparison.OrdinalIgnoreCase)) { <text> class="active" </text> }><a href="@Url.Action("Index", "Profile", new { area = "OrchardPros.Membership" })">@T("Profile")</a></li>
            <li @if (String.Equals(currentAction, "TicketsCreated", StringComparison.OrdinalIgnoreCase)) { <text> class="active" </text>  }><a href="@Url.Action("TicketsCreated", "Profile", new { area = "OrchardPros.Membership" })">@T("Tickets Created")</a></li>
            <li @if (String.Equals(currentAction, "TicketsFollowed", StringComparison.OrdinalIgnoreCase)) { <text> class="active" </text>  }><a href="@Url.Action("TicketsFollowed", "Profile", new { area = "OrchardPros.Membership" })">@T("Tickets Followed")</a></li>
            <li @if (String.Equals(currentAction, "Settings", StringComparison.OrdinalIgnoreCase)) { <text> class="active" </text>  }><a href="@Url.Action("Settings", "Profile", new { area = "OrchardPros.Membership" })">@T("Settings")</a></li>
        </ul>
    </div>
    @DisplayChildren(Model)
</section>