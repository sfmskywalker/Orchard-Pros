@using Orchard.ContentManagement
@using Orchard.Security
@using OrchardPros
@using OrchardPros.Helpers
@using OrchardPros.Models
@{
    var user = (IUser)Model.User;
    var userProfilePart = user.As<UserProfilePart>();
    var canEditProfile = Authorizer.Authorize(Permissions.ManageOwnProfile, user);
    var currentPosition = userProfilePart.Positions.Current();
    var recommendations = userProfilePart.Recommendations;
    var isCurrentUser = (bool)Model.IsCurrentUser;
    var filteredRecommendations = isCurrentUser ? recommendations : recommendations.Where(x => x.IsPublished() && x.AllowPublication).ToArray();
    var skills = userProfilePart.Skills;
}
<article class="profile-title">
    <h2>Title</h2>
    @if (currentPosition == null) {
        <p>@T("No current or past positions have been specified.")</p>
    }
    else {
        <h4>@currentPosition.Title</h4>
        <p class="small">@currentPosition.Location</p>
    }
</article>
<article class="profile-summary">
    <h2>@T("Summary")</h2>
    <p>@userProfilePart.Bio</p>
</article>
<article class="profile-experience">
    <h2>@T("Positions")</h2>
    @if (!userProfilePart.Positions.Any()) {
        <p>@T("No positions have been entered yet.")</p>
    }
    else {
        <ul class="list-jobs">
            @foreach (var position in userProfilePart.Positions) {
                <li>
                    <h4>@position.Title</h4>
                    <p>@position.CompanyName</p>
                    <p class="small">@T("From: {0} to: {1}", position.Start(), position.End())</p>
                    @if (canEditProfile) {
                            <div class="profile-actions">
                                <a href="@Url.Action("Edit", "Position", new { id = position.Id, area = "OrchardPros" })">@T("Edit")</a>
                                <a href="@Url.Action("Delete", "Position", new { id = position.Id, area = "OrchardPros" })" data-post="@Html.AntiForgeryTokenValueOrchard()" data-prompt="@T("Are you sure you want to delete this Position?")">@T("Delete")</a>
                            </div>
                    }
                </li>
            }
        </ul>
    }
    @if (canEditProfile) {
        <div class="profile-actions">
            <a class="btn btn-default btn-create-ticket btn-sm" href="@Url.Action("Create", "Position", new {area = "OrchardPros"})">@T("Add Position")</a>
        </div>
    }
</article>
<article class="profile-skills">
    <h2>@T("Skills")</h2>
    <div class="block tagcloud">
        @if (!skills.Any()) {
            <p>@T("No skills have been specified yet.")</p>
        }
        else {
            if (isCurrentUser) {
                <ul class="list-skills">
                    @foreach (var skill in skills) {
                        <li>
                            <span>@skill.Name</span>
                            <p>
                                @for (var i = 0; i < skill.Rating; i++) {
                                    <span class="glyphicon glyphicon-star"></span>
                                }
                            </p>
                            @if (canEditProfile) {
                                <div class="profile-actions">
                                    <a href="@Url.Action("Edit", "Skill", new {id = skill.Id, area = "OrchardPros"})">@T("Edit")</a>
                                    <a href="@Url.Action("Delete", "Skill", new {id = skill.Id, area = "OrchardPros"})" data-post="@Html.AntiForgeryTokenValueOrchard()" data-prompt="@T("Are you sure you want to delete this Skill?")">@T("Delete")</a>
                                </div>
                            }
                        </li>
                    }
                </ul>
            }
            else {
                foreach (var skill in skills) {
                    <a href="#" class="label label-default">@skill.Name</a>
                }
            }
        }
    </div>
    @if (canEditProfile) {
        <a class="btn btn-default btn-create-ticket btn-sm" href="@Url.Action("Create", "Skill", new {area = "OrchardPros"})">@T("Add Skill")</a>
    }
</article>
<article class="profile-recommendations">
    <h2>@T("Recommendations")</h2>
    @if (!filteredRecommendations.Any()) {
        <p>@T("No recommendations were given yet.")</p>
    }
    else {
        foreach (var recommendation in filteredRecommendations) {
            <div class="media">
                <a href="@Url.Profile(recommendation.RecommendingUser)" class="pull-left"><img src="@Url.AvatarUrl(recommendation.RecommendingUser, this, 32)" alt="@recommendation.RecommendingUser.UserName" class="profile-img-s media-object"></a>
                <div class="media-body">
                    <p><span class="dropcap">&nbsp;</span>@recommendation.Body</p>
                    @if (recommendation.AllowPublication) {
                        if (!recommendation.IsPublished()) {
                            <div class="profile-actions">
                                <a href="@Url.Action("Publish", "Recommendation", new {id = recommendation.Id, area = "OrchardPros"})" data-post="@Html.AntiForgeryTokenValueOrchard()">@T("Publish")</a>
                            </div>
                        }
                        else {
                            <div class="profile-actions">
                                <a href="@Url.Action("Unpublish", "Recommendation", new {id = recommendation.Id, area = "OrchardPros"})" data-post="@Html.AntiForgeryTokenValueOrchard()">@T("Unpublish")</a>
                            </div>
                        }
                    }
                    <div class="profile-actions">
                        <a href="@Url.Action("Delete", "Recommendation", new {id = recommendation.Id, area = "OrchardPros"})" data-post="@Html.AntiForgeryTokenValueOrchard()" data-prompt="@T("Are you sure you want to delete this recommendation?")">@T("Delete")</a>
                    </div>
                    @if (!recommendation.AllowPublication) {
                        <span>@T("The user does not allow this recommendation to be published.")</span>
                    }
                </div>
            </div>
        }
    }
    @if (Authorizer.Authorize(Permissions.WriteRecommendation, user)) {
        @Html.ActionLink(T("Write a Recommendation").ToString(), "Create", "Recommendation", new { id = user.UserName, area = "OrchardPros" }, new { @class = "btn btn-default" })
    }
</article>