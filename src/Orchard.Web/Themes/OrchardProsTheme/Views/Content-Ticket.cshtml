@using Orchard.ContentManagement
@using Orchard.Core.Contents
@using OrchardPros.Models
@{
    var contentItem = (ContentItem)Model.ContentItem;
    var ticket = contentItem.As<TicketPart>();
    var ticketAside = New.Ticket_Aside(Ticket: ticket);
    var ticketSolve = New.Ticket_Solve(Ticket: ticket);
    var subscriptionSource = ticket.As<SubscriptionSourcePart>();
    var user = ticket.User;
    var currentUser = WorkContext.CurrentUser;
    var isFollowing = subscriptionSource.Subscribers.Any(x => x.Id == currentUser.Id);
    
    Script.Require("jQuery");
    Script.Include("ticket.js");
    
    Layout.Title = ticket.IsSolved ? T("Ticket (Solved)") : T("Ticket");
    Layout.Overlays.Add(ticketSolve);
    Layout.AsideSecond.Add(ticketAside);
}
@if (Authorizer.Authorize(Permissions.EditContent, ticket)) {
    <a class="btn btn-success" href="@Url.Action("Edit", "Ticket", new { id = ticket.Id, area = "OrchardPros" })">@T("Edit")</a>
}
<section>
    <article>
        <h2>@ticket.Subject</h2>
        @Display(Model.Content)
    </article>
    <div class="sorter bottom">
        @if (isFollowing) {
            <a href="@Url.Action("Unsubscribe", "SubscriptionSource", new { id = ticket.Id, area = "OrchardPros", returnUrl = Request.Path })" data-post="@Html.AntiForgeryTokenValueOrchard()">@T("Unfollow Ticket")</a>
        }
        else {
            <a href="@Url.Action("Subscribe", "SubscriptionSource", new { id = ticket.Id, area = "OrchardPros", returnUrl = Request.Path })" data-post="@Html.AntiForgeryTokenValueOrchard()">@T("Follow Ticket")</a>
        }
        <a href="#post-reply" data-reply-subject="@T("Re: {0}", ticket.Subject)">@T("Reply")</a>
        <a href="#">Share</a>
        <span class="ticket-timestamp">@T("{0} by", Display.DateTimeRelative(dateTimeUtc: ticket.LastModifiedUtc))<a href="@Url.Profile(user)" class="author">@user.UserName</a></span>
    </div>
</section>