@using OrchardPros.ViewModels
@{
    var accountSettings = (AccountSettingsViewModel)Model.AccountSettings;
}
@Html.ValidationSummary()
@using (Html.BeginFormAntiForgeryPost(Url.Action("Settings", "Profile", new { Area = "OrchardPros" }), FormMethod.Post, new { role = "form", @class = "form-horizontal" })) {
    <article class="profile-account">
        <h2>@T("Account Settings")</h2>
        <div class="form-group">
            @Html.LabelFor(m => accountSettings.UserName, T("UserName").ToString(), new { @class = "col-sm-3" })
            <div class="col-sm-4">
                @Html.TextBoxFor(m => accountSettings.UserName, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => accountSettings.Email, T("Email").ToString(), new { @class = "col-sm-3" })
            <div class="col-sm-4">
                @Html.TextBoxFor(m => accountSettings.Email, new { @class = "form-control", type = "email" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => accountSettings.Password, T("Password").ToString(), new { @class = "col-sm-3" })
            <div class="col-sm-4">
                @Html.PasswordFor(m => accountSettings.Password, new { @class = "form-control", autocomplete = "off" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => accountSettings.PasswordRepeat, T("Repeat Password").ToString(), new { @class = "col-sm-3" })
            <div class="col-sm-4">
                @Html.PasswordFor(m => accountSettings.PasswordRepeat, new { @class = "form-control", autocomplete = "off" })
            </div>
        </div>
    </article>
    <article class="profile-notifications">
        <h2>@T("Notifications")</h2>
        @{ var notificationIndex = 0;}
        @foreach (var notification in accountSettings.Notifications) {
            <div class="checkbox">
                <input type="hidden" name="accountSettings.Notifications[@notificationIndex].Name" value="@notification.Name" />
                <label>
                    <input type="checkbox" name="accountSettings.Notifications[@notificationIndex].Checked" value="true" @if(notification.Checked){<text>checked="checked"</text>}>
                    @notification.Description
                </label>
            </div>
            notificationIndex++;
        }
    </article>
    <article class="profile-payment">
        <h2>Payment Details</h2>
        <p>Link your Paypal account to receive and transfer bounty payments.</p>
        <p>Paypal logo and API go here</p>
    </article>
    <div class="form-group">
        <button type="submit" class="btn btn-success btn-save">@T("Save Settings")</button>
    </div>
}